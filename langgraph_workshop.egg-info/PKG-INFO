Metadata-Version: 2.4
Name: langgraph-workshop
Version: 0.1.0
Summary: Add your description here
Requires-Python: >=3.13
Description-Content-Type: text/markdown
Requires-Dist: langgraph>=0.5.4
Requires-Dist: langchain>=0.3.0
Requires-Dist: langchain-openai>=0.2.0
Requires-Dist: langchain-anthropic>=0.3.0
Requires-Dist: langchain_community>=0.3.27
Requires-Dist: langchain-tavily>=0.2.7
Requires-Dist: langchain_mcp_adapters>=0.1.9
Requires-Dist: pydantic>=2.0.0
Requires-Dist: rich>=14.0.0
Requires-Dist: jupyter>=1.0.0
Requires-Dist: ipykernel>=6.20.0
Requires-Dist: tavily-python>=0.5.0
Requires-Dist: langgraph-sdk>=0.2.9
Requires-Dist: langchain-core>=0.3.79
Requires-Dist: langgraph-cli[inmem]>=0.4.4
Requires-Dist: langchain-groq>=1.0.0
Provides-Extra: dev
Requires-Dist: mypy>=1.11.1; extra == "dev"
Requires-Dist: ruff>=0.6.1; extra == "dev"

# A simple graph
- one node
- simple conversation
- persistent memory
- `%%writefile` magic used to avoid separate code typing in notebook and for studio

[simpleGraph\nb01.ipynb]


# Exercise: Add a summarizer node

Graphs requirements:
- simple chatbot
- create a summarizer node
- After each turn of conversation, the summarizer node should summarize the converstation.

[simpleGraph2\nb01.ipynb]


# Exercise: Create an agent with a web search tool

[webSearchAgent\nb01.ipynb]


# Exercise : Create a langgraph development workflow, where it is easy to develop and debug each node independently and join them together as one big agent.

 [langgraphDevelopmentFlow\README.md]



# [DONE] Create ReACT Agent


[https://langchain-ai.github.io/langgraph/concepts/why-langgraph/#learn-langgraph-basics]


# [TODO] Experiment React agent with MCP agents


# Exercise: Build something with Google Scholar tool

# Deep Agents

https://github.com/langchain-ai/deepagents
